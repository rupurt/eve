version: "3.8"

services:
  minio:
    image: quay.io/minio/minio:RELEASE.2023-07-21T21-12-44Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
    hostname: minio
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # minio_setup:
  #   image: minio/mc:RELEASE.2021-11-05T10-05-06Z
  #   depends_on:
  #     - minio
  #   links:
  #     - minio
  #   volumes:
  #     - ${PWD}/data:/duckdb/data
  #   entrypoint: >
  #     /bin/sh -c "
  #       while true; do
  #         /usr/bin/mc config host add myminio http://duckdb-minio.com:9000 duckdb_minio_admin duckdb_minio_admin_password
  #         if [ $$? -eq 0 ]; then
  #           break
  #         fi
  #         echo 'Failed to add host alias, trying again in a second'
  #         sleep 1
  #       done
  #       /usr/bin/mc admin user add myminio minio_duckdb_user minio_duckdb_user_password
  #       /usr/bin/mc admin user list myminio
  #       /usr/bin/mc admin user info myminio minio_duckdb_user
  #       /usr/bin/mc admin policy set myminio readwrite user=minio_duckdb_user
  #
  #       /usr/bin/mc admin user add myminio minio_duckdb_user_2 minio_duckdb_user_2_password
  #       /usr/bin/mc admin user list myminio
  #       /usr/bin/mc admin user info myminio minio_duckdb_user_2
  #       /usr/bin/mc admin policy set myminio readwrite user=minio_duckdb_user_2
  #
  #       /usr/bin/mc rb --force myminio/test-bucket
  #       /usr/bin/mc mb myminio/test-bucket
  #       /usr/bin/mc policy get myminio/test-bucket
  #
  #       /usr/bin/mc rb --force myminio/test-bucket_2
  #       /usr/bin/mc mb myminio/test-bucket_2
  #       /usr/bin/mc policy get myminio/test-bucket_2
  #
  #       /usr/bin/mc rb --force myminio/test-bucket-public
  #       /usr/bin/mc mb myminio/test-bucket-public
  #       /usr/bin/mc policy set download myminio/test-bucket-public
  #       /usr/bin/mc policy get myminio/test-bucket-public
  #
  #       # This is for the test of presigned URLs
  #       # small file upload
  #       /usr/bin/mc cp /duckdb/data/csv/phonenumbers.csv myminio/test-bucket/presigned/phonenumbers.csv
  #       /usr/bin/mc cp /duckdb/data/parquet-testing/glob/t1.parquet myminio/test-bucket/presigned/t1.parquet
  #
  #       # large file upload
  #       /usr/bin/mc cp /duckdb/data/parquet-testing/presigned/presigned-url-lineitem.parquet myminio/test-bucket/presigned/lineitem_large.parquet
  #
  #       /usr/bin/mc share download myminio/test-bucket/presigned/phonenumbers.csv
  #       /usr/bin/mc share download myminio/test-bucket/presigned/t1.parquet
  #       /usr/bin/mc share download myminio/test-bucket/presigned/lineitem_large.parquet
  #
  #       exit 0;
  #     "

  broker-1:
    image: evereactor/broker:0.0.1
    ports:
      - "8001:8000"
    environment:
      - FOO=bar
    volumes:
      - broker_1_var_lib:/var/lib/eve/broker
    depends_on:
      - minio

  broker-2:
    image: evereactor/broker:0.0.1
    ports:
      - "8002:8000"
    environment:
      - FOO=bar
    volumes:
      - broker_2_var_lib:/var/lib/eve/broker
    depends_on:
      - minio

  broker-3:
    image: evereactor/broker:0.0.1
    ports:
      - "8003:8000"
    environment:
      - FOO=bar
    volumes:
      - broker_3_var_lib:/var/lib/eve/broker
    depends_on:
      - minio

  broker-4:
    image: evereactor/broker:0.0.1
    ports:
      - "8004:8000"
    environment:
      - FOO=bar
    volumes:
      - broker_4_var_lib:/var/lib/eve/broker
    depends_on:
      - minio

  cluster-1:
    image: evereactor/cluster:0.0.1
    ports:
      - "8101:8100"
    environment:
      - FOO=bar
    volumes:
      - cluster_1_var_lib:/var/lib/eve/broker
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - broker-4

  cluster-2:
    image: evereactor/cluster:0.0.1
    ports:
      - "8102:8100"
    environment:
      - FOO=bar
    volumes:
      - cluster_2_var_lib:/var/lib/eve/broker
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - broker-4

  kafkagateway:
    image: evereactor/kafka:0.0.1
    ports:
      - "9092:9092"
    environment:
      - FOO=bar
    depends_on:
      - cluster-1
      - cluster-2

  webui:
    image: evereactor/webui:0.0.1
    ports:
      - "8080:8080"
    environment:
      - FOO=bar
    depends_on:
      - broker-1
      - broker-2
      - broker-3
      - broker-4
      - cluster-1
      - cluster-2

volumes:
  minio_data: {}
  broker_1_var_lib: {}
  broker_2_var_lib: {}
  broker_3_var_lib: {}
  broker_4_var_lib: {}
  cluster_1_var_lib: {}
  cluster_2_var_lib: {}
